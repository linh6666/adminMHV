"use client";

import {
  Box,
  Button,
  Checkbox,
  Group,
  LoadingOverlay,
  PasswordInput,
  TextInput,
} from "@mantine/core";
import { isNotEmpty, matchesField, useForm } from "@mantine/form";
import { IconCheck, IconX } from "@tabler/icons-react";
import { modals } from "@mantine/modals";
import { useDisclosure } from "@mantine/hooks";
import { createUser } from "../../api/apicreateuser"; // üîÅ s·ª≠a ƒë∆∞·ªùng d·∫´n n·∫øu c·∫ßn

interface CreateViewProps {
  onSearch: () => Promise<void>;
}

const CreateView = ({ onSearch }: CreateViewProps) => {
  const [visible, { open, close }] = useDisclosure(false);

  const form = useForm({
    initialValues: {
      email: "",
      full_name: "",
      password: "",
      confirm_password: "",
      is_active: false,
      is_superuser: false,
      phone: "", // ‚úÖ th√™m phone
    },
    validate: {
      email: isNotEmpty("Email kh√¥ng ƒë∆∞·ª£c ƒë·ªÉ tr·ªëng"),
      full_name: isNotEmpty("H·ªç v√† t√™n kh√¥ng ƒë∆∞·ª£c ƒë·ªÉ tr·ªëng"),
      phone: isNotEmpty("S·ªë ƒëi·ªán tho·∫°i kh√¥ng ƒë∆∞·ª£c ƒë·ªÉ tr·ªëng"), // ‚úÖ validate phone
      password: isNotEmpty("M·∫≠t kh·∫©u kh√¥ng ƒë∆∞·ª£c ƒë·ªÉ tr·ªëng"),
      confirm_password: matchesField("password", "M·∫≠t kh·∫©u kh√¥ng kh·ªõp"),
    },
  });

  const handleSubmit = async (values: typeof form.values) => {
    open();
    try {
      await createUser(values); // ‚úÖ values ƒë√£ c√≥ phone
      await onSearch();
      modals.closeAll();
    } catch (error) {
      console.error("L·ªói khi t·∫°o user:", error);
      alert("ƒê√£ x·∫£y ra l·ªói khi t·∫°o ng∆∞·ªùi d√πng.");
    } finally {
      close();
    }
  };

  return (
    <Box
      component="form"
      miw={320}
      mx="auto"
      onSubmit={form.onSubmit(handleSubmit)}
    >
      <LoadingOverlay
        visible={visible}
        zIndex={1000}
        overlayProps={{ radius: "sm", blur: 2 }}
      />

      <TextInput
        label="Email"
        placeholder="Nh·∫≠p email"
        withAsterisk
        mt="md"
        {...form.getInputProps("email")}
      />

      <TextInput
        label="H·ªç v√† t√™n"
        placeholder="Nh·∫≠p h·ªç v√† t√™n"
        withAsterisk
        mt="md"
        {...form.getInputProps("full_name")}
      />

      <TextInput
        label="S·ªë ƒëi·ªán tho·∫°i"
        placeholder="Nh·∫≠p s·ªë ƒëi·ªán tho·∫°i"
        withAsterisk
        mt="md"
        {...form.getInputProps("phone")} // ‚úÖ input cho phone
      />

      <PasswordInput
        label="M·∫≠t kh·∫©u"
        placeholder="Nh·∫≠p m·∫≠t kh·∫©u"
        withAsterisk
        mt="md"
        {...form.getInputProps("password")}
      />

      <PasswordInput
        label="Nh·∫≠p l·∫°i m·∫≠t kh·∫©u"
        placeholder="X√°c nh·∫≠n m·∫≠t kh·∫©u"
        withAsterisk
        mt="md"
        {...form.getInputProps("confirm_password")}
      />

      <Checkbox
        label="Ho·∫°t ƒë·ªông"
        mt="md"
        {...form.getInputProps("is_active", { type: "checkbox" })}
      />

      <Checkbox
        label="L√† qu·∫£n tr·ªã vi√™n"
        mt="xs"
        {...form.getInputProps("is_superuser", { type: "checkbox" })}
      />

      <Group justify="flex-end" mt="lg">
        <Button
          type="submit"
          color="#3598dc"
          loading={visible}
          leftSection={<IconCheck size={18} />}
        >
          L∆∞u
        </Button>
        <Button
          variant="outline"
          color="black"
          type="button"
          loading={visible}
          onClick={() => modals.closeAll()}
          leftSection={<IconX size={18} />}
        >
          ƒê√≥ng
        </Button>
      </Group>
    </Box>
  );
};

export default CreateView;


